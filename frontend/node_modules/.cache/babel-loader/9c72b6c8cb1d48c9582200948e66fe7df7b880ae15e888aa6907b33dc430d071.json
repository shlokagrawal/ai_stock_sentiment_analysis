{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nconst API_URL = 'http://localhost:5000/api/auth';\n\n// Helper to get token from local storage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Helper to set token in local storage\nconst setToken = token => {\n  localStorage.setItem('token', token);\n};\n\n// Helper to remove token from local storage\nconst removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Check if token is valid\nconst isTokenValid = token => {\n  if (!token) return false;\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    return decoded.exp > currentTime;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return false;\n  }\n};\n\n// Register new user\nexport const register = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, {\n      username,\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    if (token) {\n      setToken(token);\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      return {\n        success: true,\n        user\n      };\n    }\n    return {\n      success: false,\n      error: 'No token received'\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Registration error:', error);\n    return {\n      success: false,\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to register user'\n    };\n  }\n};\n\n// Login user\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    if (token) {\n      setToken(token);\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      return {\n        success: true,\n        user\n      };\n    }\n    return {\n      success: false,\n      error: 'No token received'\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Login error:', error);\n    return {\n      success: false,\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Invalid email or password'\n    };\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  removeToken();\n  // Remove auth header\n  delete axios.defaults.headers.common['Authorization'];\n  return {\n    success: true\n  };\n};\n\n// Check if user is authenticated\nexport const checkAuth = async () => {\n  const token = getToken();\n  if (!token || !isTokenValid(token)) {\n    removeToken();\n    return {\n      isAuthenticated: false,\n      user: null\n    };\n  }\n\n  // Set auth header with current token\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  try {\n    // Get current user profile\n    const response = await axios.get(`${API_URL}/profile`);\n    return {\n      isAuthenticated: true,\n      user: response.data.user\n    };\n  } catch (error) {\n    console.error('Auth check error:', error);\n    removeToken();\n    return {\n      isAuthenticated: false,\n      user: null\n    };\n  }\n};\n\n// Get user profile\nexport const getUserProfile = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/profile`);\n    return {\n      success: true,\n      user: response.data.user\n    };\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Get profile error:', error);\n    return {\n      success: false,\n      error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to fetch user profile'\n    };\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async userData => {\n  try {\n    const response = await axios.put(`${API_URL}/profile`, userData);\n    return {\n      success: true,\n      user: response.data.user\n    };\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error('Update profile error:', error);\n    return {\n      success: false,\n      error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to update user profile'\n    };\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","API_URL","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","isTokenValid","decoded","currentTime","Date","now","exp","error","console","register","username","email","password","response","post","user","data","defaults","headers","common","success","_error$response","_error$response$data","login","_error$response2","_error$response2$data","logout","checkAuth","isAuthenticated","get","getUserProfile","_error$response3","_error$response3$data","updateUserProfile","userData","put","_error$response4","_error$response4$data"],"sources":["/Users/shlokagrawal/Desktop/se_project/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\nconst API_URL = 'http://localhost:5000/api/auth';\n\n// Helper to get token from local storage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Helper to set token in local storage\nconst setToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\n// Helper to remove token from local storage\nconst removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Check if token is valid\nconst isTokenValid = (token) => {\n  if (!token) return false;\n  \n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    \n    return decoded.exp > currentTime;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return false;\n  }\n};\n\n// Register new user\nexport const register = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, {\n      username,\n      email,\n      password,\n    });\n    \n    const { token, user } = response.data;\n    \n    if (token) {\n      setToken(token);\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      return { success: true, user };\n    }\n    \n    return { success: false, error: 'No token received' };\n  } catch (error) {\n    console.error('Registration error:', error);\n    return {\n      success: false,\n      error: error.response?.data?.error || 'Failed to register user',\n    };\n  }\n};\n\n// Login user\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password,\n    });\n    \n    const { token, user } = response.data;\n    \n    if (token) {\n      setToken(token);\n      // Set auth header for future requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      return { success: true, user };\n    }\n    \n    return { success: false, error: 'No token received' };\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      error: error.response?.data?.error || 'Invalid email or password',\n    };\n  }\n};\n\n// Logout user\nexport const logout = () => {\n  removeToken();\n  // Remove auth header\n  delete axios.defaults.headers.common['Authorization'];\n  return { success: true };\n};\n\n// Check if user is authenticated\nexport const checkAuth = async () => {\n  const token = getToken();\n  \n  if (!token || !isTokenValid(token)) {\n    removeToken();\n    return { isAuthenticated: false, user: null };\n  }\n  \n  // Set auth header with current token\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  \n  try {\n    // Get current user profile\n    const response = await axios.get(`${API_URL}/profile`);\n    return { isAuthenticated: true, user: response.data.user };\n  } catch (error) {\n    console.error('Auth check error:', error);\n    removeToken();\n    return { isAuthenticated: false, user: null };\n  }\n};\n\n// Get user profile\nexport const getUserProfile = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/profile`);\n    return { success: true, user: response.data.user };\n  } catch (error) {\n    console.error('Get profile error:', error);\n    return {\n      success: false,\n      error: error.response?.data?.error || 'Failed to fetch user profile',\n    };\n  }\n};\n\n// Update user profile\nexport const updateUserProfile = async (userData) => {\n  try {\n    const response = await axios.put(`${API_URL}/profile`, userData);\n    return { success: true, user: response.data.user };\n  } catch (error) {\n    console.error('Update profile error:', error);\n    return {\n      success: false,\n      error: error.response?.data?.error || 'Failed to update user profile',\n    };\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}